name: Build and Upload Artifact

on:
  push:
    branches:
      - main  # Adjust the branch name if needed

jobs:
  create-github-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.save_output.outputs.upload_url  }}
    steps:
      - name: Delete all releases
        # You may pin to the exact commit or the version.
        # uses: amol234545/auto-bulid-exe@fa51f02942d8ff9626aadf83dd2621a4e2193391
        uses: larryjoelane/delete-release-action@v1.0.24
        with:
          release-name: v0.0.1
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.1
          release_name: Release 0.0.1
          body: |
            Test release.
          draft: false
          prerelease: false
          
      - name : machine echo env
        env : { CONTENT : "${{ toJson(env) }}" }
        run : "echo $CONTENT"
      - name : machine echo secrets
        env : { CONTENT : "${{ toJson(secrets) }}" }
        run : "echo $CONTENT"
      - name : machine echo github
        env : { CONTENT : "${{ toJson(github) }}" }
        run : "echo $CONTENT"
      - name : machine echo runner
        env : { CONTENT : "${{ toJson(runner) }}" }
        run : "echo $CONTENT"
      - name : machine echo job
        env : { CONTENT : "${{ toJson(job) }}" }
        run : "echo $CONTENT"
      - name : machine echo strategy
        env : { CONTENT : "${{ toJson(strategy) }}" }
        run : "echo $CONTENT"
      - name : machine echo matrix
        env : { CONTENT : "${{ toJson(matrix) }}" }
        run : "echo $CONTENT"
      - name : machine echo steps
        env : { CONTENT : "${{ toJson(steps) }}" }
        run : "echo $CONTENT"
      - name : machine echo needs
        env : { CONTENT : "${{ toJson(needs) }}" }
        run : "echo $CONTENT"
        
      - name: Save release output
        id: save_output
        run: echo "upload_url=${{ steps.create_release.outputs.upload_url  }}" >> "$GITHUB_OUTPUT"
  
  build:
    runs-on: ${{ matrix.os }}
    needs: create-github-release 
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Specify the desired Node.js version

      - name: Install dependencies
        run: npm install
        
      - name: Install archiver package
        run: npm install archiver
        
      - name: Run build script
        run: node build.js
        
      - name : machine echo env
        env : { CONTENT : "${{ toJson(env) }}" }
        run : "echo $CONTENT"
      - name : machine echo secrets
        env : { CONTENT : "${{ toJson(secrets) }}" }
        run : "echo $CONTENT"
      - name : machine echo github
        env : { CONTENT : "${{ toJson(github) }}" }
        run : "echo $CONTENT"
      - name : machine echo runner
        env : { CONTENT : "${{ toJson(runner) }}" }
        run : "echo $CONTENT"
      - name : machine echo job
        env : { CONTENT : "${{ toJson(job) }}" }
        run : "echo $CONTENT"
      - name : machine echo strategy
        env : { CONTENT : "${{ toJson(strategy) }}" }
        run : "echo $CONTENT"
      - name : machine echo matrix
        env : { CONTENT : "${{ toJson(matrix) }}" }
        run : "echo $CONTENT"
      - name : machine echo steps
        env : { CONTENT : "${{ toJson(steps) }}" }
        run : "echo $CONTENT"
      - name : machine echo needs
        env : { CONTENT : "${{ toJson(needs) }}" }
        run : "echo $CONTENT"
        
      - name: Upload Artifact
        uses: tanyagray/action-upload-release-asset@v1.1.3
        with:
          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
          asset_path: plugin-active-win.zip
          asset_name: plugin-active-win-${{ matrix.os }}.zip
          asset_content_type: application/zip
